<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kakao on</title><link>https://hayul7805.github.io/quartz/tags/Kakao/</link><description>Recent content in Kakao on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 18 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hayul7805.github.io/quartz/tags/Kakao/index.xml" rel="self" type="application/rss+xml"/><item><title>압축</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%95%95%EC%B6%95/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%95%95%EC%B6%95/</guid><description>신입사원 어피치는 카카오톡으로 전송되는 메시지를 압축하여 전송 효율을 높이는 업무를 맡게 되었다. 메시지를 압축하더라도 전달되는 정보가 바뀌어서는 안 되므로, 압축 전의 정보를 완벽하게 복원 가능한 무손실 압축 알고리즘을 구현하기로 했다.</description></item><item><title>캐시</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%BA%90%EC%8B%9C/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%BA%90%EC%8B%9C/</guid><description>지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다.
이 프로그램의 테스팅 업무를 담당하고 있는 어피치는 서비스를 오픈하기 전 각 로직에 대한 성능 측정을 수행하였는데, 제이지가 작성한 부분 중 데이터베이스에서 게시물을 가져오는 부분의 실행시간이 너무 오래 걸린다는 것을 알게 되었다.</description></item><item><title>LittleBird - Efficient Faster &amp; Longer Transformer for QuestionAnswering</title><link>https://hayul7805.github.io/quartz/notes/paper-review/LittleBird-Efficient-Faster-Longer-Transformer-for-QuestionAnswering/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/LittleBird-Efficient-Faster-Longer-Transformer-for-QuestionAnswering/</guid><description>[!warning] 선행 개념
sliding window attention from BigBird (Zaheer et al., 2020) linear bias to attention from ALiBi (Press et al.</description></item><item><title>주차 요금 계산</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A3%BC%EC%B0%A8-%EC%9A%94%EA%B8%88-%EA%B3%84%EC%82%B0/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A3%BC%EC%B0%A8-%EC%9A%94%EA%B8%88-%EA%B3%84%EC%82%B0/</guid><description>주차장의 요금표와 차량이 들어오고(입차) 나간(출차) 기록이 주어졌을 때, 차량별로 주차 요금을 계산하려고 합니다. 아래는 하나의 예시를 나타냅니다.
요금표 기본 시간(분) 기본 요금(원) 단위 시간(분) 단위 요금(원) 180 5000 10 600 입/출차 기록 시각(시:분) 차량 번호 내역 05:34 5961 입차 06:00 0000 입차 06:34 0000 출차 07:59 5961 출차 07:59 0148 입차 18:59 0000 입차 19:09 0148 출차 22:59 5961 입차 23:00 5961 출차 자동차별 주차 요금 차량 번호 누적 주차 시간(분) 주차 요금(원) 0000 34 + 300 = 334 5000 + ⌈(334 - 180) / 10⌉ x 600 = 14600 0148 670 5000 +⌈(670 - 180) / 10⌉x 600 = 34400 5961 145 + 1 = 146 5000 어떤 차량이 입차된 후에 출차된 내역이 없다면, 23:59에 출차된 것으로 간주합니다.</description></item><item><title>두 큐 합 같게 만들기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%91%90-%ED%81%90-%ED%95%A9-%EA%B0%99%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%91%90-%ED%81%90-%ED%95%A9-%EA%B0%99%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>길이가 같은 두 개의 큐가 주어집니다. 하나의 큐를 골라 원소를 추출(pop)하고, 추출된 원소를 다른 큐에 집어넣는(insert) 작업을 통해 각 큐의 원소 합이 같도록 만들려고 합니다.</description></item><item><title>숫자 문자열과 영단어</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC-%EC%98%81%EB%8B%A8%EC%96%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC-%EC%98%81%EB%8B%A8%EC%96%B4/</guid><description>네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다.</description></item></channel></rss>