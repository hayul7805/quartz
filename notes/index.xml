<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://hayul7805.github.io/quartz/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 14 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hayul7805.github.io/quartz/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Neural Language Generation</title><link>https://hayul7805.github.io/quartz/notes/lectures/stanford-CS224n/Neural-Language-Generation/</link><pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/lectures/stanford-CS224n/Neural-Language-Generation/</guid><description>What is natural language generation?
Any task involving text production for human consumption requires natural language generation
Formalizing NLG: a simple model and training algorithm Basics of natural language generation</description></item><item><title>MAE and MSE</title><link>https://hayul7805.github.io/quartz/notes/ml/MAE-and-MSE/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/MAE-and-MSE/</guid><description>MAE와 MSE는 회귀 모델의 성능을 평가하기 위한 두 가지 손실 함수입니다 1. MAE는 Mean Absolute Error의 약자로, 예측값과 실제값의 절대값 차이의 평균입니다.</description></item><item><title>Recall and Precision</title><link>https://hayul7805.github.io/quartz/notes/ml/Recall-and-Precision/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/Recall-and-Precision/</guid><description>Recall과 precision은 분류 문제에서 성능을 평가하는 지표입니다. Recall은 실제로 관련된 예제 중에서 검색된 예제의 비율이고, precision은 검색된 예제 중에서 관련된 예제의 비율입니다.</description></item><item><title>Sensitivity and Specificity</title><link>https://hayul7805.github.io/quartz/notes/ml/Sensitivity-and-Specificity/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/Sensitivity-and-Specificity/</guid><description>민감도(Sensitivity): recall과 동일하며, 실제 양성을 간과하지 않는 정도라고 볼 수 있으므로 오탐이 적습니다. $$ Sensitivity = {TP \over {TP+FN}} $$</description></item><item><title>SMOTE</title><link>https://hayul7805.github.io/quartz/notes/ml/SMOTE/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/SMOTE/</guid><description>SMOTE: Synthetic Minority Over-sampling Technique은 불균형한 데이터셋에서 분류기의 성능을 향상시키기 위한 방법입니다. 불균형한 데이터셋이란 한 클래스가 다른 클래스보다 훨씬 많은 비율로 존재하는 경우를 말합니다.</description></item><item><title>InstructGPT</title><link>https://hayul7805.github.io/quartz/notes/paper-review/InstructGPT/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/InstructGPT/</guid><description>The OpenAI API is powered by GPT-3 language models which can be coaxed to perform natural language tasks using carefully engineered text prompts.</description></item><item><title>ChatGPT Is a Blurry JPEG of the Web</title><link>https://hayul7805.github.io/quartz/notes/talks/ChatGPT-Is-a-Blurry-JPEG-of-the-Web/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/talks/ChatGPT-Is-a-Blurry-JPEG-of-the-Web/</guid><description>&amp;hellip;
It retains much of the information on the Web, in the same way that a retains much of the information of a higher-resolution image, but, if you’re looking for an exact sequence of bits, you won’t find it; all you will ever get is an approximation.</description></item><item><title>What Is ChatGPT Doing … and Why Does It Work?</title><link>https://hayul7805.github.io/quartz/notes/talks/What-Is-ChatGPT-Doing-and-Why-Does-It-Work/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/talks/What-Is-ChatGPT-Doing-and-Why-Does-It-Work/</guid><description/></item><item><title>Activation function</title><link>https://hayul7805.github.io/quartz/notes/dl/Activation-function/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/dl/Activation-function/</guid><description>Activation functions 입력 신호의 총합을 출력 신호로 변환하는 함수
Sigmoid • 출력 값을 0에서 1로 변경해줍니다(Squashes number to range [0, 1]) 단점: Saturation 문제 Sigmoid 함수의 출력 그래프를 보면 입력 신호의 총합이 크거나 작을 때 기울기가 0에 가까워지는 것을 볼 수 있습니다.</description></item><item><title>Gradient descent</title><link>https://hayul7805.github.io/quartz/notes/dl/Gradient-descent/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/dl/Gradient-descent/</guid><description>미분 미분은 변수의 움직임에 따른 함수값의 변화를 측정하기 위한 도구로, 최적화에 제일 많이 사용하는 기법입니다.
미분은 변화율(’접선의 기울기’) 의 극한으로 정의합니다.</description></item><item><title>Gradient Descent Methods</title><link>https://hayul7805.github.io/quartz/notes/dl/Gradient-Descent-Methods/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/dl/Gradient-Descent-Methods/</guid><description>Gradient Descent first-order(1차 미분한 값만 사용) interative(반복적으로) for finding a local minimum of a differentiable fuction. 중요한 개념들 Generalization 한 네트워크의 성능이 학습 데이터와 비슷하게 나올 것이라고 보장해줄 때.</description></item><item><title>선형 변환(Linear Transformation)</title><link>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95-%EB%B3%80%ED%99%98Linear-Transformation/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95-%EB%B3%80%ED%99%98Linear-Transformation/</guid><description>선형 변환(Linear Transformation) : 함수의 다른 말. 공간 상에서 선형으로 변환되는 걸 상상하라.
$y = 3x + 1$ 처럼, bias가 붙어 있는 것은 선형 변환이 아니라 affine 변환이다.</description></item><item><title>선형시스템</title><link>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95%EC%8B%9C%EC%8A%A4%ED%85%9C/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95%EC%8B%9C%EC%8A%A4%ED%85%9C/</guid><description>선형시스템 $$ a_{1}x_{1} + a_{2}x_{2}+a_{3}x_{3} + &amp;hellip; + a_{n}x_{n} = b $$
$$ \begin{align*} a^Tx = b \ where , a = \begin{bmatrix} a_{1} \ a_{2} \ &amp;hellip; \ a_{n} \ \end{bmatrix} and&amp;amp; , x = \begin{bmatrix} x{1} \ x{2} \ &amp;hellip; \ x_{n} \ \end{bmatrix} \end{align*} $$</description></item><item><title>압축</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%95%95%EC%B6%95/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%95%95%EC%B6%95/</guid><description>신입사원 어피치는 카카오톡으로 전송되는 메시지를 압축하여 전송 효율을 높이는 업무를 맡게 되었다. 메시지를 압축하더라도 전달되는 정보가 바뀌어서는 안 되므로, 압축 전의 정보를 완벽하게 복원 가능한 무손실 압축 알고리즘을 구현하기로 했다.</description></item><item><title>캐시</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%BA%90%EC%8B%9C/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%BA%90%EC%8B%9C/</guid><description>지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다.
이 프로그램의 테스팅 업무를 담당하고 있는 어피치는 서비스를 오픈하기 전 각 로직에 대한 성능 측정을 수행하였는데, 제이지가 작성한 부분 중 데이터베이스에서 게시물을 가져오는 부분의 실행시간이 너무 오래 걸린다는 것을 알게 되었다.</description></item><item><title>베스트앨범</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%87%E1%85%A6%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3%E1%84%8B%E1%85%A2%E1%86%AF%E1%84%87%E1%85%A5%E1%86%B7/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%87%E1%85%A6%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3%E1%84%8B%E1%85%A2%E1%86%AF%E1%84%87%E1%85%A5%E1%86%B7/</guid><description>문제 설명 스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은 다음과 같습니다.</description></item><item><title>전력망 둘로 나누기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%8C%E1%85%A5%E1%86%AB%E1%84%85%E1%85%A7%E1%86%A8%E1%84%86%E1%85%A1%E1%86%BC-%E1%84%83%E1%85%AE%E1%86%AF%E1%84%85%E1%85%A9-%E1%84%82%E1%85%A1%E1%84%82%E1%85%AE%E1%84%80%E1%85%B5/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%8C%E1%85%A5%E1%86%AB%E1%84%85%E1%85%A7%E1%86%A8%E1%84%86%E1%85%A1%E1%86%BC-%E1%84%83%E1%85%AE%E1%86%AF%E1%84%85%E1%85%A9-%E1%84%82%E1%85%A1%E1%84%82%E1%85%AE%E1%84%80%E1%85%B5/</guid><description>문제 설명 n개의 송전탑이 전선을 통해 하나의 트리 형태로 연결되어 있습니다. 당신은 이 전선들 중 하나를 끊어서 현재의 전력망 네트워크를 2개로 분할하려고 합니다.</description></item><item><title>줄 서는 방법</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%8C%E1%85%AE%E1%86%AF-%E1%84%89%E1%85%A5%E1%84%82%E1%85%B3%E1%86%AB-%E1%84%87%E1%85%A1%E1%86%BC%E1%84%87%E1%85%A5%E1%86%B8/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%E1%84%8C%E1%85%AE%E1%86%AF-%E1%84%89%E1%85%A5%E1%84%82%E1%85%B3%E1%86%AB-%E1%84%87%E1%85%A1%E1%86%BC%E1%84%87%E1%85%A5%E1%86%B8/</guid><description>문제 설명 n명의 사람이 일렬로 줄을 서고 있습니다. n명의 사람들에게는 각각 1번부터 n번까지 번호가 매겨져 있습니다. n명이 사람을 줄을 서는 방법은 여러가지 방법이 있습니다.</description></item><item><title>Linear Algebra</title><link>https://hayul7805.github.io/quartz/notes/linear-algebra/Linear-Algebra/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/linear-algebra/Linear-Algebra/</guid><description> 선형시스템 Span &amp;amp; Basis 선형독립과 선형종속 선형 변환(Linear Transformation)</description></item><item><title>Span &amp; Basis</title><link>https://hayul7805.github.io/quartz/notes/linear-algebra/Span-Basis/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/linear-algebra/Span-Basis/</guid><description>Span(생성) https://youtu.be/9F4PZ_1orF0
기저와 차원(Basis, Dimension) (선형대수학) 1.3 Basis, Dimension
$\vec{v}_1, \vec{v}_2,&amp;hellip;, \vec{v}_r$의 linear combination으로 만들 수 있는 모든 vector들의 집합을 set spanned by $\vec{v}_1, \vec{v}_2, \cdots, \vec{v}_r$이라고 부르고 $$\mathrm{span}(\left {\vec{v}_1,\vec{v}_2,\cdots,\vec{v}_r \right })$$</description></item><item><title>선형독립과 선형종속</title><link>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95%EB%8F%85%EB%A6%BD%EA%B3%BC-%EC%84%A0%ED%98%95%EC%A2%85%EC%86%8D/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/linear-algebra/%EC%84%A0%ED%98%95%EB%8F%85%EB%A6%BD%EA%B3%BC-%EC%84%A0%ED%98%95%EC%A2%85%EC%86%8D/</guid><description>1. 선형 독립 - Linearly Independent $R_n$ 공간에서 vector $\left { v_1, \cdots, v_p \right }$ 가 있을 때 만약 벡터 방정식이 trivial solution(자명해)만 갖고 있을 시에 선형 독립이라고 한다.</description></item><item><title>Language Models are Few-Shot Learners</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Language-Models-are-Few-Shot-Learners/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Language-Models-are-Few-Shot-Learners/</guid><description>[!note] Goal
이 논문에서 저자들은 GPT-3 언어 모델을 사용하여 가설을 테스트하고 있다. GPT-3는 1,750억 개의 매개 변수를 가지고 있으며 문맥 정보를 사용하여 학습할 수 있다.</description></item><item><title>LittleBird - Efficient Faster &amp; Longer Transformer for QuestionAnswering</title><link>https://hayul7805.github.io/quartz/notes/paper-review/LittleBird-Efficient-Faster-Longer-Transformer-for-QuestionAnswering/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/LittleBird-Efficient-Faster-Longer-Transformer-for-QuestionAnswering/</guid><description>[!warning] 선행 개념
sliding window attention from BigBird (Zaheer et al., 2020) linear bias to attention from ALiBi (Press et al.</description></item><item><title>단어장 만들기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%8B%A8%EC%96%B4%EC%9E%A5-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%8B%A8%EC%96%B4%EC%9E%A5-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>입력 1 2 3 4 5 6 7 8 7 3 aaaa aaa aa a b bb bbb 조건 단어들을 정렬하고 $k$ 번째에 있는 단어 출력하기 정렬은 길이 순서 단, 길이가 같은 단어의 경우 사전 순서 나의 풀이 1 2 3 4 5 6 7 8 user_input = input() n, k = map(int, user_input.</description></item><item><title>전화번호 목록</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8-%EB%AA%A9%EB%A1%9D/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8-%EB%AA%A9%EB%A1%9D/</guid><description>전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.</description></item><item><title>주차 요금 계산</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A3%BC%EC%B0%A8-%EC%9A%94%EA%B8%88-%EA%B3%84%EC%82%B0/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A3%BC%EC%B0%A8-%EC%9A%94%EA%B8%88-%EA%B3%84%EC%82%B0/</guid><description>주차장의 요금표와 차량이 들어오고(입차) 나간(출차) 기록이 주어졌을 때, 차량별로 주차 요금을 계산하려고 합니다. 아래는 하나의 예시를 나타냅니다.
요금표 기본 시간(분) 기본 요금(원) 단위 시간(분) 단위 요금(원) 180 5000 10 600 입/출차 기록 시각(시:분) 차량 번호 내역 05:34 5961 입차 06:00 0000 입차 06:34 0000 출차 07:59 5961 출차 07:59 0148 입차 18:59 0000 입차 19:09 0148 출차 22:59 5961 입차 23:00 5961 출차 자동차별 주차 요금 차량 번호 누적 주차 시간(분) 주차 요금(원) 0000 34 + 300 = 334 5000 + ⌈(334 - 180) / 10⌉ x 600 = 14600 0148 670 5000 +⌈(670 - 180) / 10⌉x 600 = 34400 5961 145 + 1 = 146 5000 어떤 차량이 입차된 후에 출차된 내역이 없다면, 23:59에 출차된 것으로 간주합니다.</description></item><item><title>짝지어 제거하기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A7%9D%EC%A7%80%EC%96%B4-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A7%9D%EC%A7%80%EC%96%B4-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid><description>짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다.</description></item><item><title>큰 수 만들기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%ED%81%B0-%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%ED%81%B0-%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.
예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다.</description></item><item><title>💾 Python</title><link>https://hayul7805.github.io/quartz/notes/Python/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Python/</guid><description/></item><item><title>게임 맵 최단거리</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B2%8C%EC%9E%84-%EB%A7%B5-%EC%B5%9C%EB%8B%A8%EA%B1%B0%EB%A6%AC/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B2%8C%EC%9E%84-%EB%A7%B5-%EC%B5%9C%EB%8B%A8%EA%B1%B0%EB%A6%AC/</guid><description>ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다.</description></item><item><title>네트워크</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</guid><description>네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다.</description></item><item><title>이진탐색</title><link>https://hayul7805.github.io/quartz/notes/algorithms/%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/algorithms/%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89/</guid><description>[!note] Note
이진탐색은 정렬되어 있는 리스트에서 탐색 범위를 절반씩 좁혀가며 데이터를 탐색하는 방법이다. 이때, log N의 시간복잡도를 가진다. 시작점, 끝점, 중간점을 이용해서 탐색 범위를 설정한다.</description></item><item><title>스킬트리</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC/</guid><description>선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.
예를 들어 선행 스킬 순서가 스파크 → 라이트닝 볼트 → 썬더일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.</description></item><item><title>DFS, BFS</title><link>https://hayul7805.github.io/quartz/notes/algorithms/DFS-BFS/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/algorithms/DFS-BFS/</guid><description>[!note] Note
DFS와 BFS는 대표적인 그래프 탐색 알고리즘이다.
깊이 우선 탐색(DFS) DFS는 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘이다.</description></item><item><title>타겟 넘버</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%ED%83%80%EA%B2%9F-%EB%84%98%EB%B2%84/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%ED%83%80%EA%B2%9F-%EB%84%98%EB%B2%84/</guid><description>n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.</description></item><item><title>숫자 카드 나누기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EC%B9%B4%EB%93%9C-%EB%82%98%EB%88%84%EA%B8%B0/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EC%B9%B4%EB%93%9C-%EB%82%98%EB%88%84%EA%B8%B0/</guid><description>철수와 영희는 선생님으로부터 숫자가 하나씩 적힌 카드들을 절반씩 나눠서 가진 후, 다음 두 조건 중 하나를 만족하는 가장 큰 양의 정수 a의 값을 구하려고 합니다.</description></item><item><title>EDA &amp; Visualization</title><link>https://hayul7805.github.io/quartz/notes/ml/EDA-Visualization/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/EDA-Visualization/</guid><description>TODO</description></item><item><title>정수 삼각형</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A0%95%EC%88%98-%EC%82%BC%EA%B0%81%ED%98%95/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%A0%95%EC%88%98-%EC%82%BC%EA%B0%81%ED%98%95/</guid><description>위와 같은 삼각형의 꼭대기에서 바닥까지 이어지는 경로 중, 거쳐간 숫자의 합이 가장 큰 경우를 찾아보려고 합니다. 아래 칸으로 이동할 때는 대각선 방향으로 한 칸 오른쪽 또는 왼쪽으로만 이동 가능합니다.</description></item><item><title>키패드 누르기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%ED%82%A4%ED%8C%A8%EB%93%9C-%EB%88%84%EB%A5%B4%EA%B8%B0/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%ED%82%A4%ED%8C%A8%EB%93%9C-%EB%88%84%EB%A5%B4%EA%B8%B0/</guid><description>스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.
이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.</description></item><item><title>Call for Customized Conversation-Customized Conversation Grounding Persona and Knowledge</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Call-for-Customized-Conversation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Call-for-Customized-Conversation/</guid><description>Abstarct Humans usually have conversations by making use of prior knowledge about a topic and background information of the people whom they are talking to.</description></item><item><title>Challenges and frontiers in abusive content detect</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Challenges-and-frontiers-in-abusive-content-detect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Challenges-and-frontiers-in-abusive-content-detect/</guid><description>[!note] Note
이번에 정리하는 논문은 &amp;ldquo;abusive content detect&amp;rdquo; 과제가 어떻게 발전했고, 지금 마주하고 있는 어려움은 무엇인지 소개하는 논문이다. 혐오표현 탐지 과제와 (완전히는 아니지만) 비슷한 과제이기에 비슷한 어려움들을 공유하고 있다.</description></item><item><title>Deep Learning</title><link>https://hayul7805.github.io/quartz/notes/Deep-Learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Deep-Learning/</guid><description> Gradient descent Activation function Gradient Descent Methods</description></item><item><title>GLUCOSE: GeneraLized and COntextualized Story Explanations</title><link>https://hayul7805.github.io/quartz/notes/paper-review/GLUCOSE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/GLUCOSE/</guid><description>[!info] Reference Nasrin Mostafazadeh, Aditya Kalyanpur, Lori Moon, David Buchanan, Lauren Berkowitz, Or Biran, and Jennifer Chu-Carroll. 2020. GLUCOSE: GeneraLized and COntextualized Story Explanations.</description></item><item><title>H-index</title><link>https://hayul7805.github.io/quartz/notes/coding-test/H-index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/H-index/</guid><description>H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과 1에 따르면, H-Index는 다음과 같이 구합니다.</description></item><item><title>Hate speech detection and racial bias mitigation in social media based on BERT model</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Hate-speech-detection-and-racial-bias-mitigation-in-social-media-based-on-BERT-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Hate-speech-detection-and-racial-bias-mitigation-in-social-media-based-on-BERT-model/</guid><description>To define automated methods with a promising performance for hate speech detection in social media, Natural Language Processing (NLP) has been used jointly with classic Machine Learning (ML) [2–4] and Deep Learning (DL) techniques [6, 15, 16].</description></item><item><title>Hate speech detection is not as easy as you may think</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Hate-speech-detection-is-not-as-easy-as-you-may-think/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Hate-speech-detection-is-not-as-easy-as-you-may-think/</guid><description>[!info] Reference
Aymé Arango, Jorge Pérez, and Barbara Poblete. 2019. Hate Speech Detection is Not as Easy as You May Think: A Closer Look at Model Validation.</description></item><item><title>Hyper parameter tuning</title><link>https://hayul7805.github.io/quartz/notes/ml/Hyper-parameter-tuning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/Hyper-parameter-tuning/</guid><description>그리드 탐색(Grid Search) 알고리즘 내 효과적인 하이퍼파라미터 조합을 찾을 때까지, 탐색하고자 하는 하이퍼파라미터와 그에 해당하는 시도해볼 값들을 지정하여 하이퍼파라미터 튜닝을 진행하는 것 사이킷런의 GridSearchCV 클래스를 사용하여, 미리 설정한 하이퍼파라미터 조합에 대해 교차검증을 진행하고, 이를 통해 평가를 할 수 있다 RandomForestRegressor에 GridSearchCV 적용하기 3X4개의 Hyperparameter Tuning 2X3개의 Hyperparameter Tuning 5회 Cross Validation 진행 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from sklearn.</description></item><item><title>Machine Learning</title><link>https://hayul7805.github.io/quartz/notes/Machine-Learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Machine-Learning/</guid><description>ML 대표 알고리즘 Logistic Regression Decision Tree Naïve Bayes Support Vector Machine K Nearest Neighbors Decision Tree 기반 Ensemble 모형 Random Forest Extra Trees Boosting Decision Tree 기반 Gradient Boosting 모형 Extreme Gradient Boosting Light Gradient Boosting Categorical Gradient Boosting Natural Gradient Boosting [!</description></item><item><title>On Cross-Dataset Generalization in Automatic Detection of Online Abuse</title><link>https://hayul7805.github.io/quartz/notes/paper-review/On-Cross-Dataset-Generalization-in-Automatic-Detection-of-Online-Abuse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/On-Cross-Dataset-Generalization-in-Automatic-Detection-of-Online-Abuse/</guid><description>[!info] Reference
Nejadgholi, I., &amp;amp; Kiritchenko, S. (2020). On cross-dataset generalization in automatic detection of online abuse. arXiv preprint arXiv:2010.</description></item><item><title>Picking Numbers</title><link>https://hayul7805.github.io/quartz/notes/coding-test/Picking-Numbers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/Picking-Numbers/</guid><description>Given an array of integers, find the longest subarray where the absolute difference between any two elements is less than or equal to 1.</description></item><item><title>Studying Generalisability Across Abusive Language Detection Datasets</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Studying-Generalisability-Across-Abusive-Language-Detection-Datasets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Studying-Generalisability-Across-Abusive-Language-Detection-Datasets/</guid><description>[!note] Reference
Steve Durairaj Swamy, Anupam Jamatia, and Björn Gambäck. 2019. Studying Generalisability across Abusive Language Detection Datasets. In Proceedings of the 23rd Conference on Computational Natural Language Learning (CoNLL), pages 940–950, Hong Kong, China.</description></item><item><title>Talks</title><link>https://hayul7805.github.io/quartz/notes/Talks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Talks/</guid><description>ChatGPT Is a Blurry JPEG of the Web What Is ChatGPT Doing … and Why Does It Work?</description></item><item><title>Towards generalisable hate speech detection</title><link>https://hayul7805.github.io/quartz/notes/paper-review/Towards-generalisable-hate-speech-detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/Towards-generalisable-hate-speech-detection/</guid><description>[!info] Reference
Yin, W., &amp;amp; Zubiaga, A. (2021). Towards generalisable hate speech detection: a review on obstacles and solutions. PeerJ Computer Science, 7, e598.</description></item><item><title>XGB Modeling</title><link>https://hayul7805.github.io/quartz/notes/ml/XGB-Modeling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/XGB-Modeling/</guid><description>1. XGB explained XGBoost의 특징 병렬 처리 가능 GPU 지원이 가능 추가적으로 정규화 기능, Tree pruning 기능, Early Stopping, 내장된 교차검증과 결측치 처리 등 XGBoost의 대표적인 파라미터 다룰 수 있는 파라미터가 많기 때문에 Customizing이 용이하다.</description></item><item><title>⚙️ Algorithms</title><link>https://hayul7805.github.io/quartz/notes/Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Algorithms/</guid><description> ⚙️ Two Pointers ⚙️ Dynamic Programming ⚙️ DFS, BFS ⚙️ 이진탐색 파라메트릭 서치(Parametric Search)</description></item><item><title>⚙️ Dynamic Programming</title><link>https://hayul7805.github.io/quartz/notes/algorithms/Dynamic-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/algorithms/Dynamic-Programming/</guid><description>이번 포스팅에서는 &amp;ldquo;한 번 계산한 문제는 다시 계산하지 않도록 한다!&amp;quot; 는 **다이나믹 프로그래밍(Dynamic Programming, 동적 계획법이라고도 함)**에 대해서 소개해보고 이를 Python으로 구현하는 방법에 대해 알아보자.</description></item><item><title>⚙️ Two Pointers</title><link>https://hayul7805.github.io/quartz/notes/algorithms/Two-Pointers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/algorithms/Two-Pointers/</guid><description>투포인터 알고리즘(Two Pointers Algorithm) 또는 슬라이딩 윈도우(Sliding Window) 라고 부른다.
알고리즘 문제를 풀다 완전탐색으로 해결하면 시간 초과가 나는 문제가 종종 있는데, 이때 사용하면 빠르게 해결할 수 있다.</description></item><item><title>구명보트</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B5%AC%EB%AA%85%EB%B3%B4%ED%8A%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B5%AC%EB%AA%85%EB%B3%B4%ED%8A%B8/</guid><description>무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.</description></item><item><title>기능개발</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B8%B0%EB%8A%A5%EA%B0%9C%EB%B0%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EA%B8%B0%EB%8A%A5%EA%B0%9C%EB%B0%9C/</guid><description>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</description></item><item><title>다음 큰 숫자</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%8B%A4%EC%9D%8C-%ED%81%B0-%EC%88%AB%EC%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%8B%A4%EC%9D%8C-%ED%81%B0-%EC%88%AB%EC%9E%90/</guid><description>자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.
조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.</description></item><item><title>두 큐 합 같게 만들기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%91%90-%ED%81%90-%ED%95%A9-%EA%B0%99%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%91%90-%ED%81%90-%ED%95%A9-%EA%B0%99%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>길이가 같은 두 개의 큐가 주어집니다. 하나의 큐를 골라 원소를 추출(pop)하고, 추출된 원소를 다른 큐에 집어넣는(insert) 작업을 통해 각 큐의 원소 합이 같도록 만들려고 합니다.</description></item><item><title>멀리뛰기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/</guid><description>효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
1 2 3 4 5 (1칸, 1칸, 1칸, 1칸) (1칸, 2칸, 1칸) (1칸, 1칸, 2칸) (2칸, 1칸, 1칸) (2칸, 2칸) 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다.</description></item><item><title>비지도학습 (Un-supervised Learning)</title><link>https://hayul7805.github.io/quartz/notes/ml/%EB%B9%84%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5-Un-supervised-Learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/%EB%B9%84%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5-Un-supervised-Learning/</guid><description>비지도학습 예시 군집 ( Clustering ) K-평균 ( K-Means ) DBSCAN 계층 군집 분석 ( Hierarchical Cluster Analysis : HCA ) 이상치/특이치탐지( Anomaly / Novelty Detection ) One-class SCM Isolation Forest 시각화 ( Visualization ) &amp;amp; 차원축소 ( Dimension Reduction ) 주성분 분석 ( Principal Component Analysis : PCA ) 커널 PCA ( Kernel PCA ) 지역적 선형 임베딩 ( Locally Linear Embedding : LLE ) T-SNE ( t-distributed stochastic neighbor embedding ) 연관규칙학습 ( Association Rule Learning )</description></item><item><title>숫자 문자열과 영단어</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC-%EC%98%81%EB%8B%A8%EC%96%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%88%AB%EC%9E%90-%EB%AC%B8%EC%9E%90%EC%97%B4%EA%B3%BC-%EC%98%81%EB%8B%A8%EC%96%B4/</guid><description>네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다.</description></item><item><title>영어 끝말잇기</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%98%81%EC%96%B4-%EB%81%9D%EB%A7%90%EC%9E%87%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%98%81%EC%96%B4-%EB%81%9D%EB%A7%90%EC%9E%87%EA%B8%B0/</guid><description>1부터 n까지 번호가 붙어있는 n명의 사람이 영어 끝말잇기를 하고 있습니다. 영어 끝말잇기는 다음과 같은 규칙으로 진행됩니다.
1번부터 번호 순서대로 한 사람씩 차례대로 단어를 말합니다.</description></item><item><title>올바른 괄호</title><link>https://hayul7805.github.io/quartz/notes/coding-test/%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8/</guid><description>괄호가 바르게 짝지어졌다는 것은 &amp;lsquo;(&amp;rsquo; 문자로 열렸으면 반드시 짝지어서 &amp;lsquo;)&amp;rsquo; 문자로 닫혀야 한다는 뜻입니다. 예를 들어
&amp;ldquo;()()&amp;rdquo; 또는 &amp;ldquo;(())()&amp;rdquo; 는 올바른 괄호입니다.</description></item><item><title>지도학습 (Supervised Learning)</title><link>https://hayul7805.github.io/quartz/notes/ml/%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5-Supervised-Learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/ml/%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5-Supervised-Learning/</guid><description>지도학습 대표 알고리즘 K-Nearest Neighbors (KNN) Linear Regression Logistic Regression Support Vector Machines (SVM) Decision Tree / Random Forest Gradient Boosting Algorithms ( XGB, LGB, CatGB, NGB 등) Neural Networks</description></item><item><title>🌲 Stanford CS224n</title><link>https://hayul7805.github.io/quartz/notes/lectures/stanford-CS224n/CS224n-main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/lectures/stanford-CS224n/CS224n-main/</guid><description> Neural Language Generation</description></item><item><title>👩‍💻 Coding Test</title><link>https://hayul7805.github.io/quartz/notes/coding-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/coding-test/</guid><description>프로그래머스 문제 모음 Level 1 숫자 문자열과 영단어 키패드 누르기 Level 2 기능개발 올바른 괄호 다음 큰 숫자 영어 끝말잇기 구명보트 멀리뛰기 두 큐 합 같게 만들기 H-index 숫자 카드 나누기 스킬트리 타겟 넘버 게임 맵 최단거리 #BFS 짝지어 제거하기 #stack 큰 수 만들기 #stack 전화번호 목록 #hash 주차 요금 계산 #hash 전력망 둘로 나누기 #BFS 줄 서는 방법 베스트앨범 캐시 #Kakao 압축 #Kakao Level 3 정수 삼각형 네트워크 HackerRank Basic Picking Numbers Goorm Level 2 단어장 만들기</description></item><item><title>📑 Paper Review</title><link>https://hayul7805.github.io/quartz/notes/paper-review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/paper-review/</guid><description>Contents Common sense 📄 GLUCOSE Hate, abusive language detection 📄 On Cross-Dataset Generalization in Automatic Detection of Online Abuse 📄 Towards generalisable hate speech detection 📄 Challenges and frontiers in abusive content detect 📄 Studying Generalisability Across Abusive Language Detection Datasets 📄 Hate speech detection is not as easy as you may think Conversational AI 📄 Call for Customized Conversation: Customized Conversation Grounding Persona and Knowledge 📄 LittleBird - Efficient Faster &amp;amp; Longer Transformer for QuestionAnswering Language Models 📄 Language Models are Few-Shot Learners 📄 InstructGPT</description></item><item><title>📚 Lectures</title><link>https://hayul7805.github.io/quartz/notes/Lectures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hayul7805.github.io/quartz/notes/Lectures/</guid><description>🌲 Stanford CS224n</description></item></channel></rss>